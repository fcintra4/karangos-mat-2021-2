{"ast":null,"code":"var _jsxFileName = \"/workspace/karangos-mat-2021-2/src/routed/KarangosList.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport axios from 'axios';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { makeStyles } from '@mui/styles';\nimport { IconButton } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { Paper } from '@mui/material';\nimport { Toolbar, Button } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useHistory } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Snackbar from '@mui/material/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dataGrid: {\n    // color: theme.palette.text.primary + ' !important',\n    '& .MuiTablePagination-root': {\n      color: theme.palette.text.primary\n    },\n\n    /*\r\n    '& .MuiIconButton-root': {\r\n    color: theme.palette.text.primary + ' !important'\r\n    },*/\n    '& .MuiDataGrid-row button': {\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': {\n      visibility: 'visible'\n    },\n    '& .MuiDataGrid-row:hover': {\n      backgroundColor: theme.palette.action.hover + ' !important'\n    }\n  },\n  toolbar: {\n    padding: 0,\n    margin: '20px 0',\n    justifyContent: 'flex-end'\n  }\n}));\nexport default function KarangosList() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory(); // Usando lazy initializer\n\n  const [state, setState] = React.useState(() => ({\n    karangos: [],\n    deletable: null,\n    isDialogOpen: false,\n    isSnackOpen: false,\n    snackMessage: '',\n    isError: false\n  }));\n  const {\n    karangos,\n    deletable,\n    isDialogOpen,\n    isSnackOpen,\n    snackMessage,\n    isError\n  } = state;\n\n  function getData(otherState = state) {\n    // Buscando os dados na API do back-end (servidor remoto)\n    axios.get(' https://api.faustocintra.com.br/karangos').then(response => setState({ ...otherState,\n      Karangos: response.data\n    }));\n  }\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n  const columns = [{\n    field: 'id',\n    headerName: 'Cód.',\n    width: 120\n  }, {\n    field: 'marca',\n    headerName: 'marca',\n    width: 300\n  }, {\n    field: 'modelo',\n    headerName: 'modelo',\n    width: 200\n  }, {\n    field: 'cor',\n    headerName: 'cor',\n    width: 200\n  }, {\n    field: 'an',\n    headerName: 'E-mail',\n    width: 300\n  }, {\n    field: 'editar',\n    headerName: 'Editar',\n    align: 'center',\n    headerAlign: 'center',\n    width: 100,\n    disableColumnMenu: true,\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"editar\",\n      onClick: () => history.push(`/Karangos/${params.id}`),\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: 'excluir',\n    headerName: 'Excluir',\n    align: 'center',\n    headerAlign: 'center',\n    width: 100,\n    disableColumnMenu: true,\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"excluir\",\n      onClick: () => handleDelete(params.id),\n      children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)\n  }];\n\n  function handleDialogClose(answer) {\n    // Fecha a caixa de diálogo de confirmação\n    setState({ ...state,\n      isDialogOpen: false\n    }); // O usuário confirmou a exclusão\n\n    if (answer) {\n      // Usa o axios para enviar uma ordem de exclusão\n      // para a API do back-end\n      axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`).then( // Callback se ser certo\n      () => {\n        // Exibe o snackbar com a mensagem de sucesso\n        console.log({\n          isDialogOpen\n        });\n        const newState = { ...state,\n          isError: false,\n          isSnackOpen: true,\n          isDialogOpen: false,\n          snackMessage: 'Item excluído com sucesso'\n        }; // Recarregar os dados da tabela\n\n        getData(newState);\n      }).catch( // Callback se der errado\n      error => {\n        // Exibe o snackbar com mensagem de erro\n        setState({ ...state,\n          isError: true,\n          isSnackOpen: true,\n          snackMessage: 'ERRO: não foi possível excluir o item. Motivo: ' + error.message\n        });\n      });\n    }\n  }\n\n  function handleDelete(id) {\n    setState({ ...state,\n      deletable: id,\n      isDialogOpen: true\n    });\n  }\n\n  function handleSnackClose(event, reason) {\n    // Evita que o snackbar seja fechado clicando-se fora dele \n    if (reason === 'clickaway') return; // Fechamento em condições normais\n\n    setState({ ...state,\n      isSnackOpen: false\n    }); //getData()\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listagem de clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      title: \"Aten\\xE7\\xE3o\",\n      isOpen: isDialogOpen,\n      onClose: handleDialogClose,\n      children: \"Deseja realmente excluir este item?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: isSnackOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackClose,\n      message: snackMessage,\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: handleSnackClose,\n        children: isError ? 'Que pena!' : 'Entendi'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolbar,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 22\n        }, this),\n        variant: \"contained\",\n        size: \"large\",\n        color: \"secondary\",\n        onClick: () => history.push('/clientes/new'),\n        children: \"Cadastrar novo Karango\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        className: classes.dataGrid,\n        rows: karangos,\n        columns: columns,\n        pageSize: 5,\n        rowsPerPageOptions: [10],\n        disableSelectionOnClick: true,\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosList, \"EPsYczy5sRZqklb/iCOF/oE/teg=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = KarangosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosList\");","map":{"version":3,"sources":["/workspace/karangos-mat-2021-2/src/routed/KarangosList.js"],"names":["React","axios","DataGrid","makeStyles","IconButton","EditIcon","DeleteForeverIcon","Paper","Toolbar","Button","AddCircleIcon","useHistory","ConfirmDialog","Snackbar","useStyles","theme","dataGrid","color","palette","text","primary","visibility","backgroundColor","action","hover","toolbar","padding","margin","justifyContent","KarangosList","classes","history","state","setState","useState","karangos","deletable","isDialogOpen","isSnackOpen","snackMessage","isError","getData","otherState","get","then","response","Karangos","data","useEffect","columns","field","headerName","width","align","headerAlign","disableColumnMenu","sortable","renderCell","params","push","id","handleDelete","handleDialogClose","answer","delete","console","log","newState","catch","error","message","handleSnackClose","event","reason"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport axios from 'axios'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { IconButton } from '@mui/material'\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { Paper } from '@mui/material'\r\nimport { Toolbar, Button } from '@mui/material'\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { useHistory } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport Snackbar from '@mui/material/Snackbar'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dataGrid: {\r\n    // color: theme.palette.text.primary + ' !important',\r\n    '& .MuiTablePagination-root': {\r\n      color: theme.palette.text.primary\r\n    },/*\r\n    '& .MuiIconButton-root': {\r\n      color: theme.palette.text.primary + ' !important'\r\n    },*/\r\n    '& .MuiDataGrid-row button': {\r\n      visibility: 'hidden'\r\n    },\r\n    '& .MuiDataGrid-row:hover button': {\r\n      visibility: 'visible'\r\n    },\r\n    '& .MuiDataGrid-row:hover': {\r\n      backgroundColor: theme.palette.action.hover + ' !important'\r\n    }\r\n  },\r\n  toolbar: {\r\n    padding: 0,\r\n    margin: '20px 0',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nexport default function KarangosList() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const history = useHistory()\r\n  \r\n  // Usando lazy initializer\r\n  const [state, setState] = React.useState(() => ({ \r\n    karangos: [],\r\n    deletable: null,\r\n    isDialogOpen: false,\r\n    isSnackOpen: false,\r\n    snackMessage: '',\r\n    isError: false\r\n  }))\r\n  const { karangos, deletable, isDialogOpen, isSnackOpen, snackMessage, isError } = state\r\n\r\n  function getData(otherState = state) {\r\n    // Buscando os dados na API do back-end (servidor remoto)\r\n    axios.get(' https://api.faustocintra.com.br/karangos')\r\n    .then(\r\n      response => setState({...otherState, Karangos: response.data})\r\n    )\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  const columns = [\r\n    { \r\n      field: 'id', \r\n      headerName: 'Cód.',\r\n      width: 120\r\n    },\r\n    { \r\n      field: 'marca', \r\n      headerName: 'marca',\r\n      width: 300\r\n    },\r\n    { \r\n      field: 'modelo', \r\n      headerName: 'modelo',\r\n      width: 200\r\n    },\r\n    { \r\n      field: 'cor', \r\n      headerName: 'cor',\r\n      width: 200\r\n    },\r\n    { \r\n      field: 'an', \r\n      headerName: 'E-mail',\r\n      width: 300\r\n    },\r\n    {\r\n      field: 'editar',\r\n      headerName: 'Editar',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      width: 100,\r\n      disableColumnMenu: true,\r\n      sortable: false,\r\n      renderCell: params => (\r\n        <IconButton \r\n          aria-label=\"editar\"\r\n          onClick={() => history.push(`/Karangos/${params.id}`)}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      )\r\n    },\r\n    {\r\n      field: 'excluir',\r\n      headerName: 'Excluir',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      width: 100,\r\n      disableColumnMenu: true,\r\n      sortable: false,\r\n      renderCell: params => (\r\n        <IconButton \r\n          aria-label=\"excluir\" \r\n          onClick={() => handleDelete(params.id)}\r\n        >\r\n          <DeleteForeverIcon color=\"error\" />\r\n        </IconButton>\r\n      )\r\n    }\r\n\r\n  ];\r\n\r\n  function handleDialogClose(answer) {\r\n\r\n    // Fecha a caixa de diálogo de confirmação\r\n    setState({...state, isDialogOpen: false})\r\n\r\n    // O usuário confirmou a exclusão\r\n    if(answer) {\r\n      \r\n        // Usa o axios para enviar uma ordem de exclusão\r\n        // para a API do back-end\r\n        axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\r\n        .then(\r\n          // Callback se ser certo\r\n          () => {\r\n            // Exibe o snackbar com a mensagem de sucesso\r\n            console.log({isDialogOpen})\r\n            const newState = {\r\n              ...state,\r\n              isError: false,\r\n              isSnackOpen: true,\r\n              isDialogOpen: false,\r\n              snackMessage: 'Item excluído com sucesso'\r\n            }\r\n            // Recarregar os dados da tabela\r\n            getData(newState)\r\n          }\r\n        )\r\n        .catch(\r\n          // Callback se der errado\r\n          error => {\r\n            // Exibe o snackbar com mensagem de erro\r\n            setState({\r\n              ...state,\r\n              isError: true,\r\n              isSnackOpen: true,\r\n              snackMessage: 'ERRO: não foi possível excluir o item. Motivo: ' + error.message\r\n            })\r\n          }\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  function handleDelete(id) {\r\n    setState({...state, deletable: id, isDialogOpen: true})\r\n  }\r\n  \r\n  function handleSnackClose(event, reason) {\r\n    // Evita que o snackbar seja fechado clicando-se fora dele \r\n    if (reason === 'clickaway') return\r\n    \r\n    // Fechamento em condições normais\r\n    setState({...state, isSnackOpen: false})\r\n    //getData()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Listagem de clientes</h1>\r\n\r\n      <ConfirmDialog \r\n        title=\"Atenção\" \r\n        isOpen={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n      >\r\n        Deseja realmente excluir este item?\r\n      </ConfirmDialog>\r\n\r\n      <Snackbar\r\n        open={isSnackOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n        action={\r\n          <Button color=\"secondary\" onClick={handleSnackClose}>\r\n            {isError ? 'Que pena!' : 'Entendi'}\r\n          </Button>\r\n        }\r\n      />\r\n      \r\n      <Toolbar className={classes.toolbar}>\r\n        <Button \r\n          startIcon={<AddCircleIcon />}\r\n          variant=\"contained\" \r\n          size=\"large\" \r\n          color=\"secondary\"\r\n          onClick={() => history.push('/clientes/new')}\r\n        >\r\n          Cadastrar novo Karango\r\n        </Button>\r\n      </Toolbar>\r\n\r\n      <Paper elevation={4}>\r\n        <DataGrid className={classes.dataGrid}\r\n          rows={karangos}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[10]}\r\n          disableSelectionOnClick={true}\r\n          autoHeight={true}\r\n        />  \r\n      </Paper>\r\n    </>\r\n  )\r\n\r\n}\r\n      \r\n\r\n\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}