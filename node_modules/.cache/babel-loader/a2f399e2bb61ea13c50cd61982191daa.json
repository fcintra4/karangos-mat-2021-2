{"ast":null,"code":"var _jsxFileName = \"/workspace/karangos-mat-2021-2/src/routed/ClientesForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport InputMask from 'react-input-mask';\nimport { makeStyles } from '@mui/styles';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ptLocale from 'date-fns/locale/pt-BR';\nimport MenuItem from '@mui/material/MenuItem';\nimport Button from '@mui/material/Button';\nimport Toolbar from '@mui/material/Toolbar';\nimport validator from 'validator';\nimport { validate as cpfValidate, validate } from 'gerador-validador-cpf';\nimport { isFuture as dateIsFuture, isValid as dateIsValid } from 'date-fns';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Snackbar from '@mui/material/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    maxWidth: '80%',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      marginBottom: '24px'\n    }\n  },\n  toolbar: {\n    width: '100%',\n    justifyContent: 'space-around'\n  }\n}));\nconst unidadesFed = [{\n  sigla: 'DF',\n  nome: 'Distrito Federal'\n}, {\n  sigla: 'ES',\n  nome: 'Espírito Santo'\n}, {\n  sigla: 'GO',\n  nome: 'Goiás'\n}, {\n  sigla: 'MS',\n  nome: 'Mato Grosso do Sul'\n}, {\n  sigla: 'MG',\n  nome: 'Minas Gerais'\n}, {\n  sigla: 'PR',\n  nome: 'Paraná'\n}, {\n  sigla: 'RJ',\n  nome: 'Rio de Janeiro'\n}, {\n  sigla: 'SP',\n  nome: 'São Paulo'\n}];\nconst formatChars = {\n  '9': '[0-9]',\n  // Dígito obrigatório\n  '#': '[0-9]?' // Dígito opcional\n\n};\nexport default function ClientesForm() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [state, setState] = React.useState({\n    cliente: {},\n    // Objeto vazio,\n    errors: {},\n    formValid: true,\n    isSnackOpen: false,\n    snackMessage: '',\n    isSendingError: false,\n    btnSendLabel: 'Enviar'\n  });\n  const {\n    cliente,\n    errors,\n    formValid,\n    isSnackOpen,\n    snackMessage,\n    isSendingError,\n    btnSendLabel\n  } = state;\n\n  function handleInputChange(event, field = event.target.id) {\n    // Preencher a variável de estado \"cliente\" com o valor\n    // dos inputs\n    const newCliente = { ...cliente\n    };\n\n    if (field === 'data_nascimento') {\n      newCliente[field] = event;\n    } // trim() retira espaços em branco antes e depois da string\n    else newCliente[field] = event.target.value; // Chama a validação do formulário\n\n\n    const newErrors = formValidate(newCliente);\n    const newFormValid = Object.keys(newErrors).length === 0;\n    setState({ ...state,\n      cliente: newCliente,\n      errors: newErrors,\n      formValid: newFormValid\n    });\n  }\n\n  function formValidate(fields) {\n    const newErrors = {}; // Validação do campo \"nome\", mínimo de 5 caracteres, contendo pelo menos\n    // um espaço entre palavras\n\n    if (!fields.nome || !(validator.isLength(fields.nome.trim(), {\n      min: 5\n    }) && validator.contains(fields.nome.trim(), ' '))) {\n      newErrors.nome = 'Informe o nome completo';\n    } // Validação do campo \"cpf\": precisa ser válido\n\n\n    if (!fields.cpf || !cpfValidate(fields.cpf)) {\n      newErrors.cpf = 'CPF inválido';\n    } // Validação do campo \"rg\": 4 caracteres, no mínimo\n\n\n    if (!fields.rg || !validator.isLength(fields.rg.trim(), {\n      min: 4\n    })) {\n      newErrors.rg = 'Doc. identidade incompleto ou não informado';\n    } // Validação do campo \"data_nascimento\": deve ser válida e não pode ser futura\n\n\n    if (!fields.data_nascimento || !dateIsValid(fields.data_nascimento) || dateIsFuture(fields.data_nascimento)) {\n      newErrors.data_nascimento = 'Data inválida ou no futuro';\n    } // Validação do campo \"logradouro\": 4 caracteres, no mínimo\n\n\n    if (!fields.logradouro || !validator.isLength(fields.logradouro.trim(), {\n      min: 4\n    })) {\n      newErrors.logradouro = 'Logradouro incompleto ou não informado';\n    } // Validação do campo \"num_imovel\": 1 caracter, no mínimo\n\n\n    if (!fields.num_imovel || !validator.isLength(fields.num_imovel.trim(), {\n      min: 1\n    })) {\n      newErrors.num_imovel = 'Número não informado';\n    } // Validação do campo \"bairro\": 3 caracteres, no mínimo\n\n\n    if (!fields.bairro || !validator.isLength(fields.bairro.trim(), {\n      min: 3\n    })) {\n      newErrors.bairro = 'Bairro incompleto ou não informado';\n    } // Validação do campo \"municipio\": 3 caracteres, no mínimo\n\n\n    if (!fields.municipio || !validator.isLength(fields.municipio.trim(), {\n      min: 3\n    })) {\n      newErrors.municipio = 'Município incompleto ou não informado';\n    } // Validação do campo \"uf\": 2 caracteres (mínimo e máximo)\n\n\n    if (!fields.uf || !validator.isLength(fields.uf.trim(), {\n      min: 2,\n      max: 2\n    })) {\n      newErrors.uf = 'Selecione a UF';\n    } // Validação do campo \"telefone\": não pode conter sublinhado, indicando que\n    // a entrada com máscara está incompleta\n\n\n    if (!fields.telefone || validator.contains(fields.telefone, '_')) {\n      newErrors.telefone = 'Telefone inválido';\n    } // Validação do campo \"email\": deve ser um endereço de e-mail válido\n\n\n    if (!fields.email || !validator.isEmail(fields.email)) {\n      newErrors.email = 'E-mail inválido ou não informado';\n    }\n\n    return newErrors;\n  }\n\n  function handleSubmit(event) {\n    // Evita o recarregamento da página\n    event.preventDefault();\n    if (formValid) saveData();\n  }\n\n  function saveData() {\n    // Desabilita o botão de envio para evitar cliques duplicados\n    // e múltiplos envios dos mesmos dados\n    setState({ ...state,\n      btnSendLabel: 'Enviando...'\n    });\n    axios.post('https://api.faustocintra.com.br/clientes', cliente).then(() => {\n      setState({ ...state,\n        isSnackOpen: true,\n        snackMessage: 'Dados salvos com sucesso!',\n        isSendingError: false,\n        btnSendLabel: 'Enviar' // Reabilita o botão de envio \n\n      });\n    }).catch(error => {\n      setState({ ...state,\n        isSnackOpen: true,\n        snackMessage: 'ERRO: ' + error.message,\n        isSendingError: true,\n        btnSendLabel: 'Enviar' // Reabilita o botão de envio \n\n      });\n    });\n  }\n\n  function handleSnackClose(event, reason) {\n    // Evita que o snackbar seja fechado clicando-se fora dele \n    if (reason === 'clickaway') return; // Fechamento em condições normais\n\n    setState({ ...state,\n      isSnackOpen: false\n    }); // Retorna ao componente de listagem\n\n    history.push('/clientes');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro de novo cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [JSON.stringify(cliente), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 34\n      }, this), 'formValid: ' + formValid, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 36\n      }, this), 'errors:' + JSON.stringify(errors)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: isSnackOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackClose,\n      message: snackMessage,\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: handleSnackClose,\n        children: isSendingError ? 'Que pena!' : 'Entendi'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"nome\",\n        label: \"Nome\",\n        variant: \"filled\",\n        value: cliente.nome,\n        required: true,\n        fullWidth: true,\n        onChange: handleInputChange,\n        error: errors === null || errors === void 0 ? void 0 : errors.nome,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        mask: \"999.999.999-99\",\n        value: cliente.cpf,\n        onChange: handleInputChange,\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"cpf\",\n          label: \"CPF\",\n          variant: \"filled\",\n          required: true,\n          fullWidth: true,\n          error: errors === null || errors === void 0 ? void 0 : errors.cpf,\n          helperText: errors === null || errors === void 0 ? void 0 : errors.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"rg\",\n        label: \"Doc. Identidade\",\n        variant: \"filled\",\n        value: cliente.rg,\n        required: true,\n        fullWidth: true,\n        onChange: handleInputChange,\n        error: errors === null || errors === void 0 ? void 0 : errors.rg,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.rg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        locale: ptLocale,\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          label: \"Data de nascimento\",\n          value: cliente.data_nascimento,\n          onChange: event => handleInputChange(event, 'data_nascimento'),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            id: \"data_nascimento\",\n            variant: \"filled\",\n            fullWidth: true,\n            error: errors === null || errors === void 0 ? void 0 : errors.data_nascimento,\n            helperText: errors === null || errors === void 0 ? void 0 : errors.data_nascimento\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"logradouro\",\n        label: \"Logradouro (Rua, Av., etc.)\",\n        variant: \"filled\",\n        value: cliente.logradouro,\n        required: true,\n        fullWidth: true,\n        onChange: handleInputChange,\n        error: errors === null || errors === void 0 ? void 0 : errors.logradouro,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.logradouro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"num_imovel\",\n        label: \"N\\xBA\",\n        variant: \"filled\",\n        value: cliente.num_imovel,\n        required: true,\n        fullWidth: true,\n        onChange: handleInputChange,\n        error: errors === null || errors === void 0 ? void 0 : errors.num_imovel,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.num_imovel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"complemento\",\n        label: \"Complemento\",\n        variant: \"filled\",\n        value: cliente.complemento,\n        fullWidth: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"bairro\",\n        label: \"Bairro\",\n        variant: \"filled\",\n        value: cliente.bairro,\n        required: true,\n        fullWidth: true,\n        onChange: handleInputChange,\n        error: errors === null || errors === void 0 ? void 0 : errors.bairro,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.bairro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"municipio\",\n        label: \"Munic\\xEDpio\",\n        variant: \"filled\",\n        value: cliente.municipio,\n        required: true,\n        fullWidth: true,\n        onChange: handleInputChange,\n        error: errors === null || errors === void 0 ? void 0 : errors.municipio,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.municipio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"uf\",\n        select: true,\n        label: \"UF\",\n        value: cliente.uf,\n        onChange: event => handleInputChange(event, 'uf'),\n        helperText: \"(Selecione)\",\n        variant: \"filled\",\n        required: true,\n        fullWidth: true,\n        error: errors === null || errors === void 0 ? void 0 : errors.uf,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.uf,\n        children: unidadesFed.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.sigla,\n          children: option.nome\n        }, option.sigla, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        mask: \"(99) #9999-9999\",\n        formatChars: formatChars,\n        value: cliente.telefone,\n        onChange: handleInputChange,\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"telefone\",\n          label: \"Telefone\",\n          variant: \"filled\",\n          required: true,\n          fullWidth: true,\n          error: errors === null || errors === void 0 ? void 0 : errors.telefone,\n          helperText: errors === null || errors === void 0 ? void 0 : errors.telefone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"email\",\n        label: \"E-mail\",\n        variant: \"filled\",\n        value: cliente.email,\n        required: true,\n        fullWidth: true,\n        type: \"email\",\n        onChange: handleInputChange,\n        error: errors === null || errors === void 0 ? void 0 : errors.email,\n        helperText: errors === null || errors === void 0 ? void 0 : errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"submit\",\n          disabled: btnSendLabel !== 'Enviar',\n          children: btnSendLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClientesForm, \"LWjVBOYcFHU30/ITDk9MpuCy8sc=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ClientesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientesForm\");","map":{"version":3,"sources":["/workspace/karangos-mat-2021-2/src/routed/ClientesForm.js"],"names":["React","TextField","InputMask","makeStyles","AdapterDateFns","LocalizationProvider","DatePicker","ptLocale","MenuItem","Button","Toolbar","validator","validate","cpfValidate","isFuture","dateIsFuture","isValid","dateIsValid","axios","useHistory","Snackbar","useStyles","theme","form","maxWidth","margin","display","justifyContent","flexWrap","minWidth","marginBottom","toolbar","width","unidadesFed","sigla","nome","formatChars","ClientesForm","classes","history","state","setState","useState","cliente","errors","formValid","isSnackOpen","snackMessage","isSendingError","btnSendLabel","handleInputChange","event","field","target","id","newCliente","value","newErrors","formValidate","newFormValid","Object","keys","length","fields","isLength","trim","min","contains","cpf","rg","data_nascimento","logradouro","num_imovel","bairro","municipio","uf","max","telefone","email","isEmail","handleSubmit","preventDefault","saveData","post","then","catch","error","message","handleSnackClose","reason","push","JSON","stringify","params","complemento","map","option"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport TextField from '@mui/material/TextField'\r\nimport InputMask from 'react-input-mask'\r\nimport { makeStyles } from '@mui/styles'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport ptLocale from 'date-fns/locale/pt-BR';\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Button from '@mui/material/Button'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport validator from 'validator'\r\nimport { validate as cpfValidate, validate } from 'gerador-validador-cpf'\r\nimport { isFuture as dateIsFuture, isValid as dateIsValid } from 'date-fns'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Snackbar from '@mui/material/Snackbar'\r\n\r\nconst useStyles = makeStyles(theme => (\r\n  {\r\n    form: {\r\n      maxWidth: '80%',\r\n      margin: '0 auto',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      flexWrap: 'wrap',\r\n      '& .MuiFormControl-root': {\r\n        minWidth: '200px',\r\n        maxWidth: '500px',\r\n        marginBottom: '24px',\r\n      }\r\n    },\r\n    toolbar: {\r\n      width: '100%',\r\n      justifyContent: 'space-around'\r\n    }\r\n  }\r\n))\r\n\r\nconst unidadesFed = [\r\n  { sigla: 'DF', nome: 'Distrito Federal'},\r\n  { sigla: 'ES', nome: 'Espírito Santo'},\r\n  { sigla: 'GO', nome: 'Goiás'},\r\n  { sigla: 'MS', nome: 'Mato Grosso do Sul'},\r\n  { sigla: 'MG', nome: 'Minas Gerais'},\r\n  { sigla: 'PR', nome: 'Paraná'},\r\n  { sigla: 'RJ', nome: 'Rio de Janeiro'},\r\n  { sigla: 'SP', nome: 'São Paulo' }\r\n]\r\n\r\nconst formatChars = {\r\n  '9': '[0-9]',   // Dígito obrigatório\r\n  '#': '[0-9]?'   // Dígito opcional\r\n}\r\n\r\nexport default function ClientesForm() {\r\n\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n\r\n  const [state, setState] = React.useState({\r\n    cliente: {}, // Objeto vazio,\r\n    errors: {},\r\n    formValid: true,\r\n    isSnackOpen: false,\r\n    snackMessage: '',\r\n    isSendingError: false,\r\n    btnSendLabel: 'Enviar'\r\n  })\r\n  const { cliente, errors, formValid, isSnackOpen, snackMessage, isSendingError, btnSendLabel } = state\r\n\r\n  function handleInputChange(event, field = event.target.id) {\r\n\r\n    // Preencher a variável de estado \"cliente\" com o valor\r\n    // dos inputs\r\n    const newCliente = {...cliente}\r\n\r\n    if(field === 'data_nascimento') {\r\n      newCliente[field] = event\r\n    }\r\n    // trim() retira espaços em branco antes e depois da string\r\n    else newCliente[field] = event.target.value \r\n\r\n    // Chama a validação do formulário\r\n    const newErrors = formValidate(newCliente)\r\n    const newFormValid = Object.keys(newErrors).length === 0\r\n\r\n    setState({...state, cliente: newCliente, errors: newErrors, formValid: newFormValid})\r\n  }\r\n  \r\n  function formValidate(fields) {\r\n\r\n    const newErrors = {}\r\n\r\n    // Validação do campo \"nome\", mínimo de 5 caracteres, contendo pelo menos\r\n    // um espaço entre palavras\r\n    \r\n    if(!fields.nome || !(validator.isLength(fields.nome.trim(), {min: 5}) \r\n      && validator.contains(fields.nome.trim(), ' '))) {\r\n      newErrors.nome = 'Informe o nome completo'\r\n    }\r\n    \r\n    // Validação do campo \"cpf\": precisa ser válido\r\n    if(!fields.cpf || !cpfValidate(fields.cpf)) {\r\n      newErrors.cpf = 'CPF inválido'\r\n    }\r\n\r\n    // Validação do campo \"rg\": 4 caracteres, no mínimo\r\n    if(!fields.rg || !validator.isLength(fields.rg.trim(), {min: 4})) {\r\n      newErrors.rg = 'Doc. identidade incompleto ou não informado'\r\n    }\r\n\r\n    // Validação do campo \"data_nascimento\": deve ser válida e não pode ser futura\r\n    if(!fields.data_nascimento || !dateIsValid(fields.data_nascimento) \r\n      || dateIsFuture(fields.data_nascimento)) {\r\n        newErrors.data_nascimento = 'Data inválida ou no futuro'\r\n    }\r\n\r\n    // Validação do campo \"logradouro\": 4 caracteres, no mínimo\r\n    if(!fields.logradouro || !validator.isLength(fields.logradouro.trim(), {min: 4})) {\r\n      newErrors.logradouro = 'Logradouro incompleto ou não informado'\r\n    }\r\n\r\n    // Validação do campo \"num_imovel\": 1 caracter, no mínimo\r\n    if(!fields.num_imovel || !validator.isLength(fields.num_imovel.trim(), {min: 1})) {\r\n      newErrors.num_imovel = 'Número não informado'\r\n    }\r\n\r\n    // Validação do campo \"bairro\": 3 caracteres, no mínimo\r\n    if(!fields.bairro || !validator.isLength(fields.bairro.trim(), {min: 3})) {\r\n      newErrors.bairro = 'Bairro incompleto ou não informado'\r\n    }\r\n\r\n    // Validação do campo \"municipio\": 3 caracteres, no mínimo\r\n    if(!fields.municipio || !validator.isLength(fields.municipio.trim(), {min: 3})) {\r\n      newErrors.municipio = 'Município incompleto ou não informado'\r\n    }\r\n\r\n    // Validação do campo \"uf\": 2 caracteres (mínimo e máximo)\r\n    if(!fields.uf || !validator.isLength(fields.uf.trim(), {min: 2, max: 2})) {\r\n      newErrors.uf = 'Selecione a UF'\r\n    }\r\n\r\n    // Validação do campo \"telefone\": não pode conter sublinhado, indicando que\r\n    // a entrada com máscara está incompleta\r\n    if(!fields.telefone || validator.contains(fields.telefone, '_')) {\r\n      newErrors.telefone = 'Telefone inválido'\r\n    }\r\n\r\n    // Validação do campo \"email\": deve ser um endereço de e-mail válido\r\n    if(!fields.email || !validator.isEmail(fields.email)) {\r\n      newErrors.email = 'E-mail inválido ou não informado'\r\n    }\r\n    \r\n    return newErrors\r\n\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n\r\n    // Evita o recarregamento da página\r\n    event.preventDefault()\r\n\r\n    if(formValid) saveData()\r\n\r\n  }\r\n\r\n  function saveData() {\r\n\r\n    // Desabilita o botão de envio para evitar cliques duplicados\r\n    // e múltiplos envios dos mesmos dados\r\n    setState({...state, btnSendLabel: 'Enviando...'})\r\n\r\n    axios.post('https://api.faustocintra.com.br/clientes', cliente)\r\n      .then(\r\n        () => {\r\n          setState({\r\n            ...state, \r\n            isSnackOpen: true,\r\n            snackMessage: 'Dados salvos com sucesso!',\r\n            isSendingError: false,\r\n            btnSendLabel: 'Enviar' // Reabilita o botão de envio \r\n          })\r\n          \r\n        }\r\n      )\r\n      .catch(\r\n        error => {\r\n          setState({\r\n            ...state, \r\n            isSnackOpen: true,\r\n            snackMessage: 'ERRO: ' + error.message,\r\n            isSendingError: true,\r\n            btnSendLabel: 'Enviar' // Reabilita o botão de envio \r\n          })  \r\n        }\r\n      )\r\n  }\r\n\r\n  function handleSnackClose(event, reason) {\r\n    // Evita que o snackbar seja fechado clicando-se fora dele \r\n    if (reason === 'clickaway') return\r\n    \r\n    // Fechamento em condições normais\r\n    setState({...state, isSnackOpen: false})\r\n    \r\n    // Retorna ao componente de listagem\r\n    history.push('/clientes')\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Cadastro de novo cliente</h1>\r\n\r\n      <div>\r\n        {JSON.stringify(cliente)}<br />\r\n        {'formValid: ' + formValid}<br />\r\n        {'errors:' + JSON.stringify(errors)}\r\n      </div>\r\n\r\n      <Snackbar\r\n        open={isSnackOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n        action={\r\n          <Button color=\"secondary\" onClick={handleSnackClose}>\r\n            {isSendingError ? 'Que pena!' : 'Entendi'}\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        \r\n        <TextField \r\n          id=\"nome\" \r\n          label=\"Nome\" \r\n          variant=\"filled\"\r\n          value={cliente.nome}\r\n          required\r\n          fullWidth\r\n          onChange={handleInputChange}\r\n          error={errors?.nome}\r\n          helperText={errors?.nome}\r\n        />\r\n\r\n        <InputMask\r\n          mask=\"999.999.999-99\"\r\n          value={cliente.cpf}\r\n          onChange={handleInputChange}\r\n        >\r\n          {\r\n            () => <TextField \r\n              id=\"cpf\"\r\n              label=\"CPF\" \r\n              variant=\"filled\"\r\n              required\r\n              fullWidth\r\n              error={errors?.cpf}\r\n              helperText={errors?.cpf}\r\n            />\r\n          }\r\n        </InputMask>\r\n\r\n        <TextField \r\n          id=\"rg\" \r\n          label=\"Doc. Identidade\" \r\n          variant=\"filled\"\r\n          value={cliente.rg}\r\n          required\r\n          fullWidth\r\n          onChange={handleInputChange}\r\n          error={errors?.rg}\r\n          helperText={errors?.rg}\r\n        />\r\n\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={ptLocale}>\r\n          { /* new Date() => data de hoje, previne digitação de datas futuras */ }\r\n          <DatePicker\r\n            label=\"Data de nascimento\"\r\n            value={cliente.data_nascimento}\r\n            onChange={event => handleInputChange(event, 'data_nascimento')}\r\n            renderInput={(params) => \r\n              <TextField \r\n                {...params}\r\n                id=\"data_nascimento\"\r\n                variant=\"filled\"\r\n                fullWidth \r\n                error={errors?.data_nascimento}\r\n                helperText={errors?.data_nascimento}\r\n              />\r\n            }\r\n          />\r\n        </LocalizationProvider>\r\n\r\n        <TextField \r\n          id=\"logradouro\" \r\n          label=\"Logradouro (Rua, Av., etc.)\" \r\n          variant=\"filled\"\r\n          value={cliente.logradouro}\r\n          required\r\n          fullWidth\r\n          onChange={handleInputChange}\r\n          error={errors?.logradouro}\r\n          helperText={errors?.logradouro}\r\n        />\r\n\r\n        <TextField \r\n          id=\"num_imovel\" \r\n          label=\"Nº\" \r\n          variant=\"filled\"\r\n          value={cliente.num_imovel}\r\n          required\r\n          fullWidth\r\n          onChange={handleInputChange}\r\n          error={errors?.num_imovel}\r\n          helperText={errors?.num_imovel}\r\n        />\r\n\r\n        <TextField \r\n          id=\"complemento\" \r\n          label=\"Complemento\" \r\n          variant=\"filled\"\r\n          value={cliente.complemento}\r\n          fullWidth\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <TextField \r\n          id=\"bairro\" \r\n          label=\"Bairro\" \r\n          variant=\"filled\"\r\n          value={cliente.bairro}\r\n          required\r\n          fullWidth\r\n          onChange={handleInputChange}\r\n          error={errors?.bairro}\r\n          helperText={errors?.bairro}\r\n        />\r\n\r\n        <TextField \r\n          id=\"municipio\" \r\n          label=\"Município\" \r\n          variant=\"filled\"\r\n          value={cliente.municipio}\r\n          required\r\n          fullWidth\r\n          onChange={handleInputChange}\r\n          error={errors?.municipio}\r\n          helperText={errors?.municipio}\r\n        />\r\n\r\n        <TextField\r\n          id=\"uf\"\r\n          select\r\n          label=\"UF\"\r\n          value={cliente.uf}\r\n          onChange={event => handleInputChange(event, 'uf')}\r\n          helperText=\"(Selecione)\"\r\n          variant=\"filled\"\r\n          required\r\n          fullWidth\r\n          error={errors?.uf}\r\n          helperText={errors?.uf}\r\n        >\r\n          {unidadesFed.map((option) => (\r\n            <MenuItem key={option.sigla} value={option.sigla}>\r\n              {option.nome}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <InputMask\r\n          mask=\"(99) #9999-9999\"\r\n          formatChars={formatChars}\r\n          value={cliente.telefone}\r\n          onChange={handleInputChange}\r\n        >\r\n          {\r\n            () => <TextField \r\n              id=\"telefone\"\r\n              label=\"Telefone\" \r\n              variant=\"filled\"\r\n              required\r\n              fullWidth\r\n              error={errors?.telefone}\r\n              helperText={errors?.telefone}\r\n            />\r\n          }\r\n        </InputMask>\r\n\r\n        <TextField \r\n          id=\"email\" \r\n          label=\"E-mail\" \r\n          variant=\"filled\"\r\n          value={cliente.email}\r\n          required\r\n          fullWidth\r\n          type=\"email\"\r\n          onChange={handleInputChange}\r\n          error={errors?.email}\r\n          helperText={errors?.email}\r\n        />\r\n\r\n        <Toolbar className={classes.toolbar}>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            disabled={btnSendLabel !== 'Enviar'}\r\n          >\r\n            {btnSendLabel}\r\n          </Button>\r\n          \r\n          <Button variant=\"outlined\">Voltar</Button>\r\n        </Toolbar>\r\n\r\n      </form>\r\n\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}