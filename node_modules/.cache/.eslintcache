[{"/workspace/karangos-mat-2021-2/src/index.js":"1","/workspace/karangos-mat-2021-2/src/App.js":"2","/workspace/karangos-mat-2021-2/src/reportWebVitals.js":"3","/workspace/karangos-mat-2021-2/src/ui/AppHeader.js":"4","/workspace/karangos-mat-2021-2/src/ui/AppFooter.js":"5","/workspace/karangos-mat-2021-2/src/routed/ClientesForm.js":"6","/workspace/karangos-mat-2021-2/src/routed/ClientesList.js":"7","/workspace/karangos-mat-2021-2/src/ui/MainMenu.js":"8","/workspace/karangos-mat-2021-2/src/ui/ConfirmDialog.js":"9","/workspace/karangos-mat-2021-2/src/routed/KarangosList.js":"10"},{"size":500,"mtime":1637249627000,"results":"11","hashOfConfig":"12"},{"size":1746,"mtime":1637258380000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1637249627000,"results":"14","hashOfConfig":"12"},{"size":547,"mtime":1637249627000,"results":"15","hashOfConfig":"12"},{"size":1390,"mtime":1637262560000,"results":"16","hashOfConfig":"12"},{"size":5551,"mtime":1637249627000,"results":"17","hashOfConfig":"12"},{"size":6207,"mtime":1637249627000,"results":"18","hashOfConfig":"12"},{"size":1888,"mtime":1637257401000,"results":"19","hashOfConfig":"12"},{"size":1203,"mtime":1637249627000,"results":"20","hashOfConfig":"12"},{"size":6788,"mtime":1637331470554,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"p77aji",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/karangos-mat-2021-2/src/index.js",[],["44","45"],"/workspace/karangos-mat-2021-2/src/App.js",[],"/workspace/karangos-mat-2021-2/src/reportWebVitals.js",[],"/workspace/karangos-mat-2021-2/src/ui/AppHeader.js",[],"/workspace/karangos-mat-2021-2/src/ui/AppFooter.js",[],"/workspace/karangos-mat-2021-2/src/routed/ClientesForm.js",[],"/workspace/karangos-mat-2021-2/src/routed/ClientesList.js",["46"],"import * as React from 'react'\r\nimport axios from 'axios'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { IconButton } from '@mui/material'\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { Paper } from '@mui/material'\r\nimport { Toolbar, Button } from '@mui/material'\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { useHistory } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport Snackbar from '@mui/material/Snackbar'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dataGrid: {\r\n    // color: theme.palette.text.primary + ' !important',\r\n    '& .MuiTablePagination-root': {\r\n      color: theme.palette.text.primary\r\n    },/*\r\n    '& .MuiIconButton-root': {\r\n      color: theme.palette.text.primary + ' !important'\r\n    },*/\r\n    '& .MuiDataGrid-row button': {\r\n      visibility: 'hidden'\r\n    },\r\n    '& .MuiDataGrid-row:hover button': {\r\n      visibility: 'visible'\r\n    },\r\n    '& .MuiDataGrid-row:hover': {\r\n      backgroundColor: theme.palette.action.hover + ' !important'\r\n    }\r\n  },\r\n  toolbar: {\r\n    padding: 0,\r\n    margin: '20px 0',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nexport default function ClientesList() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const history = useHistory()\r\n  \r\n  // Usando lazy initializer\r\n  const [state, setState] = React.useState(() => ({ \r\n    clientes: [],\r\n    deletable: null,\r\n    isDialogOpen: false,\r\n    isSnackOpen: false,\r\n    snackMessage: '',\r\n    isError: false\r\n  }))\r\n  const { clientes, deletable, isDialogOpen, isSnackOpen, snackMessage, isError } = state\r\n\r\n  function getData(otherState = state) {\r\n    // Buscando os dados na API do back-end (servidor remoto)\r\n    axios.get('https://api.faustocintra.com.br/clientes')\r\n    .then(\r\n      response => setState({...otherState, clientes: response.data})\r\n    )\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  const columns = [\r\n    { \r\n      field: 'id', \r\n      headerName: 'Cód.',\r\n      width: 120\r\n    },\r\n    { \r\n      field: 'nome', \r\n      headerName: 'Nome do cliente',\r\n      width: 300\r\n    },\r\n    { \r\n      field: 'cpf', \r\n      headerName: 'CPF',\r\n      width: 200\r\n    },\r\n    { \r\n      field: 'telefone', \r\n      headerName: 'Telefone',\r\n      width: 200\r\n    },\r\n    { \r\n      field: 'email', \r\n      headerName: 'E-mail',\r\n      width: 300\r\n    },\r\n    {\r\n      field: 'editar',\r\n      headerName: 'Editar',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      width: 100,\r\n      disableColumnMenu: true,\r\n      sortable: false,\r\n      renderCell: params => (\r\n        <IconButton \r\n          aria-label=\"editar\"\r\n          onClick={() => history.push(`/clientes/${params.id}`)}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      )\r\n    },\r\n    {\r\n      field: 'excluir',\r\n      headerName: 'Excluir',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      width: 100,\r\n      disableColumnMenu: true,\r\n      sortable: false,\r\n      renderCell: params => (\r\n        <IconButton \r\n          aria-label=\"excluir\" \r\n          onClick={() => handleDelete(params.id)}\r\n        >\r\n          <DeleteForeverIcon color=\"error\" />\r\n        </IconButton>\r\n      )\r\n    }\r\n\r\n  ];\r\n\r\n  function handleDialogClose(answer) {\r\n\r\n    // Fecha a caixa de diálogo de confirmação\r\n    setState({...state, isDialogOpen: false})\r\n\r\n    // O usuário confirmou a exclusão\r\n    if(answer) {\r\n      \r\n        // Usa o axios para enviar uma ordem de exclusão\r\n        // para a API do back-end\r\n        axios.delete(`https://api.faustocintra.com.br/clientes/${deletable}`)\r\n        .then(\r\n          // Callback se ser certo\r\n          () => {\r\n            // Exibe o snackbar com a mensagem de sucesso\r\n            console.log({isDialogOpen})\r\n            const newState = {\r\n              ...state,\r\n              isError: false,\r\n              isSnackOpen: true,\r\n              isDialogOpen: false,\r\n              snackMessage: 'Item excluído com sucesso'\r\n            }\r\n            // Recarregar os dados da tabela\r\n            getData(newState)\r\n          }\r\n        )\r\n        .catch(\r\n          // Callback se der errado\r\n          error => {\r\n            // Exibe o snackbar com mensagem de erro\r\n            setState({\r\n              ...state,\r\n              isError: true,\r\n              isSnackOpen: true,\r\n              snackMessage: 'ERRO: não foi possível excluir o item. Motivo: ' + error.message\r\n            })\r\n          }\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n  function handleDelete(id) {\r\n    setState({...state, deletable: id, isDialogOpen: true})\r\n  }\r\n  \r\n  function handleSnackClose(event, reason) {\r\n    // Evita que o snackbar seja fechado clicando-se fora dele \r\n    if (reason === 'clickaway') return\r\n    \r\n    // Fechamento em condições normais\r\n    setState({...state, isSnackOpen: false})\r\n    //getData()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Listagem de clientes</h1>\r\n\r\n      <ConfirmDialog \r\n        title=\"Atenção\" \r\n        isOpen={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n      >\r\n        Deseja realmente excluir este item?\r\n      </ConfirmDialog>\r\n\r\n      <Snackbar\r\n        open={isSnackOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n        action={\r\n          <Button color=\"secondary\" onClick={handleSnackClose}>\r\n            {isError ? 'Que pena!' : 'Entendi'}\r\n          </Button>\r\n        }\r\n      />\r\n      \r\n      <Toolbar className={classes.toolbar}>\r\n        <Button \r\n          startIcon={<AddCircleIcon />}\r\n          variant=\"contained\" \r\n          size=\"large\" \r\n          color=\"secondary\"\r\n          onClick={() => history.push('/clientes/new')}\r\n        >\r\n          Cadastrar novo cliente\r\n        </Button>\r\n      </Toolbar>\r\n\r\n      <Paper elevation={4}>\r\n        <DataGrid className={classes.dataGrid}\r\n          rows={clientes}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[10]}\r\n          disableSelectionOnClick={true}\r\n          autoHeight={true}\r\n        />  \r\n      </Paper>\r\n    </>\r\n  )\r\n\r\n}","/workspace/karangos-mat-2021-2/src/ui/MainMenu.js",[],"/workspace/karangos-mat-2021-2/src/ui/ConfirmDialog.js",[],"/workspace/karangos-mat-2021-2/src/routed/KarangosList.js",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":68,"column":6,"nodeType":"54","endLine":68,"endColumn":8,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"53","line":69,"column":6,"nodeType":"54","endLine":69,"endColumn":8,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["59"],["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},{"desc":"61","fix":"63"},"Update the dependencies array to be: [getData]",{"range":"64","text":"65"},{"range":"66","text":"65"},[2007,2009],"[getData]",[2054,2056]]